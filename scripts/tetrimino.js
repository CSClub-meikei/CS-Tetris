// Generated by CoffeeScript 1.10.0
var Tetrimino, TetriminoRed, idNumber,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

idNumber = 0;

Tetrimino = (function() {
  function Tetrimino(locate) {
    this.point = {
      top: 0,
      left: 0
    };
    this.blocks = [new TetriminoBlockElement("block" + (idNumber++), locate[0], locate[1]), new TetriminoBlockElement("block" + (idNumber++), locate[2], locate[3]), new TetriminoBlockElement("block" + (idNumber++), locate[4], locate[5]), new TetriminoBlockElement("block" + (idNumber++), locate[6], locate[7])];
    this.deg0 = locate;
    this.deg90 = [];
    this.deg180 = [];
    this.deg270 = [];
  }

  Tetrimino.prototype.move = function(deltaPointTop, deltaPointLeft) {
    var block, i, len, ref;
    this.point.top += deltaPointTop;
    this.point.left += deltaPointLeft;
    ref = this.blocks;
    for (i = 0, len = ref.length; i < len; i++) {
      block = ref[i];
      block.move(deltaPointTop, deltaPointLeft);
    }
    console.log(this.point.top);
    return console.log(this.point.left);
  };

  Tetrimino.prototype.rotate = function(deg) {
    this.blocks[0].moveAbolute(this.point.top + this.deg0[0], this.point.left + this.deg0[1]);
    this.blocks[1].moveAbolute(this.point.top + this.deg0[2], this.point.left + this.deg0[3]);
    this.blocks[2].moveAbolute(this.point.top + this.deg0[4], this.point.left + this.deg0[5]);
    return this.blocks[3].moveAbolute(this.point.top + this.deg0[6], this.point.left + this.deg0[7]);
  };

  return Tetrimino;

})();

TetriminoRed = (function(superClass) {
  extend(TetriminoRed, superClass);

  function TetriminoRed() {
    TetriminoRed.__super__.constructor.call(this, [0, 0, 30, 0, 30, 30, 30, 60]);
  }

  return TetriminoRed;

})(Tetrimino);
